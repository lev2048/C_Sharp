<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAADJ0lEQVRIS43V3WvPURzA8d9ms01WNmNX
        KE9FTaQ8XHh2wQUhN1L+AlLKBUqhlEYpjMjT1HChDFuMSRZXlCtRXFHzPA/DVmbe7+/vnJ/v72dbTr1+
        /b7f7zmfc77n4fPNDFSu3n2gUszGHjzAR/ThN77gMQ5hIcqRtBuyxEqYhga8wXc8xTWcxAlcwRN8Qxea
        MBfFCNEKig8wDBvwEjZuxAqMRQnS9aqxAEfxHm+xFcnb5BVvwEabEV9/JZymUOvf4jM46nm4jZ/Yjwrk
        VZIjN3gbJod72UpDlFgPtbgAO9mO7HT5g+l4gUdIgnetWpLpXjanKAjh/hbvBclz22AMbuADlnjPm07N
        MTh6pyXzbflcG9bhFHaj2iBKBR+BLWjEIu81t3cYbxZewY4qveFW7IQLWtredDkGOIl+9OEMcp2gAvvQ
        A+vcQnnnxnXxTfbCTbLWC/d5N9wtme7s6OXIfyPdSRXKkQ6u0yhB7GAG3FUXvfAQuc9dpPQUGMygBo+d
        nEU90sFbMR5JO2PAXeSu6vTCE+ohym3JWBlOS2Env8L/GHwCkvoWYwSH0e8fj74nNHmQLqGhb+LIY9Do
        JsYhF9wS42AXkg764fEfrIMyOC1xPaJLGIVQO1tiHOxA0sFnmFvcrqFaLnjhbkmLC5+3hY0RHETSgWnB
        xDUaSaXQYKDgTosjj+uQ14nFGBgOz8FHL0y5X2HajcHlIepFDO6COueFu8upcwqLETuYite47oWB3UlH
        UPyw4bjBPf7nkA6e2y0o3F13MeLT6qWxg234gU1elMF8/g7zEYN4/NvgIUoHj+zEkd/Deu9da7tnvEl4
        hvuoiT2abv24mElrm+90xCCuQ2n4n8xxLOGep9ecVNTSets4I3EWZoZ1yC1KEfxYmGpNuWbF5Nn/lFDX
        4AfQC3eQC51XwS+RH4setGAm7DhbaYDis2AizsHg51GFUCsUb8Ac4sfCRXcXmBXrkPuopzjCKXBBn8Nv
        tyNPguufEh544BbDt7CRi2/iMrfshCe0Hu5zB+G0dmAt/k7LYMUKQSXW4BL8XpizTCuRb2knm1CDpF1+
        yWT+ALgnUfPZN3kNAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnModify.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAACwklEQVRIS43VS0hVQRjAcTUfBbmorJZB
        pWCQFBHVokhoUa7SXQQuWkRQEElR2aoWQWggvYg2vaDaBNEDosiF5q6gVRTUysBekmlWLtL+/3HGzs17
        r37w83rmzHxzHjPfKckX97r7VIF1OIk+DOIPxvEdL3EWWzAXYVzRSJ1Qj0v4iFG8xn1cwWXcxSuM4Btu
        YQPKELP9F57AHOzCezj4BrZjCcqR7bcQm3EBX/AJBxHuJidsgIMOIN3+DviYYq/p4Tl41RvxFL9wGvOQ
        00leucmfYGVsm+xUJFI/LMVNOMkRTD4u/2AV3uEFZp08G3HMYjzEVzTaZqOP5iK8eh/LrJN39DZNOdez
        J02yFv1womobXIoD8IUWfeYpMonr0InDqO7q2Z0mOQUXSbMHrvMfcLWEDsUiJlY9nmMCY2hBmqABrqrb
        HriJXOe+pJgmf5ggyibXELYhTeAqclUNeOAOdROFx2MnlKER+7AsthVKPoJDKEeaQF2Y8B+3vjs0nLAT
        GtAPE3SjFoWSt6EC4S5THpxAmGACbv/sBOsxiJToGZrQm2mbltxIeXAcYYIhWFtcrmkCb/coRmGycQzH
        34LJDXNEnQgTWBYsXIsQOjkIlTiGNEnRK09hDlTCfTDogSV3GJbd2K3gJEWTG+ZAHT7ggQcmdiWdR065
        NQmqsB+PsRczJVcbfqLVgypYzz9jE0KnFCZDKbwbf+OZ3EjjsAJv0IOa1Gi59eNiJZ1xw+ULx2A+rsLK
        0GJbOlEKPxaWWkuuVTGcm03EviY/gzG4gnzROR38Evmx+I1HWAMnnuyUJzwXLcc1mPw6FiD2imEDrCF+
        LHzprgKr4mpMfdQzvMJa+ELfwm+3Vx6Sa1rEE264rfAuHOTLt3BZW9rhDu2A69yL8LH2ohn/HkuhsENU
        jZ24A78X1izLSuJdOkkrahDG5UZJyV//VfgNIcV/swAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>